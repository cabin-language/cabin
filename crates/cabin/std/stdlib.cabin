let This = group {};

let Nothing = either {
	nothing
}; 

let Optional = choice<Data> {
	Data,
	Nothing
};

let Text = group {};

let Anything = group {
	to_text: action(this: Anything): Text
};

let AnythingImplementation = extend<T: Anything> T tobe Anything {
	#[builtin<"Anything.to_string">]
	to_text = action(this: Anything): Text
};

let Object = group {};

let Group = group {
	fields: Anything,
};

let Parameter = group {
	name: Text,
	type: Anything
};

let OneOf = group {}; 

let Function = group {
	parameters: Anything,
	return_type: Anything,
	compile_time_parameters: Anything,
	tags: Anything,
	this_object: Anything,
};

let system_side_effects = new Object {};

let RuntimeTag = group {
	reason: Text
};

let runtime = action<reason: Text>: RuntimeTag {
	runtime is new RuntimeTag {
		reason = reason	
	};
};

let List = group {};

let Either = group {
	variants: List
};

let Boolean = either {
	true,
	false
};
let true = Boolean.true; 
let false = Boolean.false;

# The tag for a built-in function. Functions that are built into the Cabin compiler 
# and run with native code are marked with this, usually via the `builtin<>` function.
let BuiltinTag = group {
	internal_name: Text
};

let builtin = action<name: Text>: BuiltinTag {
	builtin is new BuiltinTag {
		internal_name = name
	};
};

let Number = group {}; 

let AddableTo = group<Operand: Anything, Result: Anything> {
	plus: action(this: This, other: Operand): Result
}; 

let Addable = group {};

#[default]
let AddNumbers = extend Number tobe Addable { 

	#[builtin<"Number.plus">]
	plus = action(this: Number, other: Number): Number,
};

let Attempted = choice<Data, Error> {
	Data,
	Error
};

let TerminalPrintOptions = group {
	newline = true,
	error = false,
};

let TerminalInputOptions = group {
	prompt = ""
};

let system = new Object {

	terminal = new Object {

		#[
			builtin<"terminal.print">, 
			system_side_effects, 
			runtime<"print() is meant for the user. Use debug() at compile-time, or use a run expression to print to the user.">
		]
		print = action(object: Anything, options: TerminalPrintOptions): Nothing,

		#[
			builtin<"terminal.input">, 
			system_side_effects, 
			runtime<"Taking input at compile-time can produce varying outputs depending on user input. Consider embedding a file.">
		] 
		input = action(options: TerminalInputOptions): Text,

		debug = action(object: Anything): Nothing {
			system.terminal.print(object);
		},
	},
};
